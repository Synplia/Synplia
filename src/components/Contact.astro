---
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

interface Props {
  translations: {
    contact: {
      title: string;
      form: {
        name: string;
        email: string;
        message: string;
        submit: string;
        success: string;
        error: string;
        sending: string;
        placeholder: {
          name: string;
          email: string;
          message: string;
        };
      };
    };
  };
}

const { translations } = Astro.props;
---

<section id="contact" class="relative py-20 overflow-hidden bg-gradient-cool">
  <div class="absolute inset-0">
    <div class="absolute inset-0 bg-[radial-gradient(circle_at_50%_120%,rgba(65,179,163,0.07),rgba(65,179,163,0)_70%)]"></div>
    <div class="absolute inset-0 bg-[radial-gradient(circle_at_80%_20%,rgba(42,157,143,0.07),rgba(42,157,143,0)_70%)]"></div>
    <div class="absolute inset-0 bg-[linear-gradient(to_right,rgba(65,179,163,0.1)_1px,transparent_1px),linear-gradient(to_bottom,rgba(65,179,163,0.1)_1px,transparent_1px)] bg-[size:4rem_4rem] [mask-image:radial-gradient(ellipse_at_center,transparent_20%,black_70%)] opacity-20"></div>
  </div>

  <div class="relative container mx-auto px-6">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-4xl font-bold text-center text-white mb-12">
        {translations.contact.title}
      </h2>

      <div class="bg-white/10 backdrop-blur-md rounded-2xl p-8 shadow-xl border border-white/10">
        <form id="contactForm" class="space-y-8">
          <div class="grid md:grid-cols-2 gap-8">
            <div class="space-y-2">
              <label for="name" class="block text-white text-sm font-medium">
                {translations.contact.form.name}
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full px-4 py-3 rounded-xl bg-white/5 border border-white/10 focus:border-accent focus:ring-2 focus:ring-accent text-white placeholder-white/50 transition-all duration-300"
                placeholder={translations.contact.form.placeholder.name}
              />
            </div>
            <div class="space-y-2">
              <label for="email" class="block text-white text-sm font-medium">
                {translations.contact.form.email}
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="w-full px-4 py-3 rounded-xl bg-white/5 border border-white/10 focus:border-accent focus:ring-2 focus:ring-accent text-white placeholder-white/50 transition-all duration-300"
                placeholder={translations.contact.form.placeholder.email}
              />
            </div>
          </div>

          <div class="space-y-2">
            <label for="message" class="block text-white text-sm font-medium">
              {translations.contact.form.message}
            </label>
            <textarea
              id="message"
              name="message"
              rows="6"
              required
              class="w-full px-4 py-3 rounded-xl bg-white/5 border border-white/10 focus:border-accent focus:ring-2 focus:ring-accent text-white placeholder-white/50 transition-all duration-300 resize-none"
              placeholder={translations.contact.form.placeholder.message}
            ></textarea>
          </div>

          <div class="flex justify-end">
            <button
              type="submit"
              class="group relative inline-flex items-center justify-center px-8 py-4 bg-accent hover:bg-accent/90 text-white font-semibold rounded-xl transition-all duration-300 transform hover:-translate-y-1 hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
            >
              <span class="flex items-center gap-2">
                <span class="opacity-100 group-disabled:opacity-0 transition-opacity">
                  {translations.contact.form.submit}
                </span>
                <svg 
                  class="w-5 h-5 opacity-0 group-disabled:opacity-100 animate-spin absolute"
                  xmlns="http://www.w3.org/2000/svg" 
                  fill="none" 
                  viewBox="0 0 24 24"
                >
                  <circle 
                    class="opacity-25" 
                    cx="12" 
                    cy="12" 
                    r="10" 
                    stroke="currentColor" 
                    stroke-width="4"
                  />
                  <path 
                    class="opacity-75" 
                    fill="currentColor" 
                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                  />
                </svg>
              </span>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <ToastContainer
    client:load
    position="bottom-right"
    autoClose={5000}
    hideProgressBar={false}
    newestOnTop={false}
    closeOnClick
    rtl={false}
    pauseOnFocusLoss
    draggable
    pauseOnHover
    theme="dark"
  />
</section>

<script>
  interface Toastify {
    toast: {
      success: (message: string, options: object) => void;
      error: (message: string, options: object) => void;
    }
  }

  let toastify: Toastify;
  const { translations } = Astro.props;
  let form = document.getElementById('contactForm') as HTMLFormElement;
  
  async function loadDependencies() {
    const { toast } = await import('react-toastify');
    toastify = { toast };
  }

  loadDependencies();
  
  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const button = form.querySelector('button');
      if (!button) return;
      
      button.disabled = true;

      try {
        const { default: emailjs } = await import('@emailjs/browser');

        const serviceId = import.meta.env.PUBLIC_EMAILJS_SERVICE_ID;
        const templateId = import.meta.env.PUBLIC_EMAILJS_TEMPLATE_ID;
        const publicKey = import.meta.env.PUBLIC_EMAILJS_PUBLIC_KEY;

        if (!serviceId || !templateId || !publicKey) {
          throw new Error('Missing EmailJS configuration');
        }

        await emailjs.sendForm(serviceId, templateId, form, publicKey);
        
        toastify.toast.success(
          translations.contact.form.success,
          { theme: "dark" }
        );
        form.reset();
      } catch (error) {
        toastify.toast.error(
          translations.contact.form.error,
          { theme: "dark" }
        );
      } finally {
        button.disabled = false;
      }
    });
  }
</script>